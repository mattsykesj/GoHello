// Code generated by hero.
// source: /home/matt/go/src/github.com/mattsykesj/hello/views/food.html
// DO NOT EDIT!
package template

import (
	"io"

	"github.com/shiyanhui/hero"
)

func RenderFood(title string, user *UserVM, userFoods []string, w io.Writer) {
	_buffer := hero.GetBuffer()
	defer hero.PutBuffer(_buffer)
	_buffer.WriteString(`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<base href="../">
    <title>`)
	hero.EscapeHTML(title, _buffer)
	_buffer.WriteString(`</title>

	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous">

	<link rel="stylesheet" type="text/css" href="/content/css/site.css">
	<script type="text/javascript" src="/content/scripts/validate.js"></script>

	<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
	<script defer src="https://use.fontawesome.com/releases/v5.0.8/js/all.js"></script>
</head>
<body>

 `)
	_buffer.WriteString(`

<div class="d-flex flex-column">
	<div class="d-flex flex-row justify-content-around card">
		<div class="p-2 text-center">
			<label>User Name</label>
			<span>`)
	_buffer.WriteString(user.UserName)
	_buffer.WriteString(`</span>
		</div>
		<div class="p-2 text-center">
			<label>Target Calories</label>
			<span>`)
	hero.FormatInt(int64(user.TargetCalories), _buffer)
	_buffer.WriteString(`</span>
		</div>
		<div class="p-2 text-center">
			<label>Target Protein</label>
			<span>`)
	hero.FormatInt(int64(user.TargetProtein), _buffer)
	_buffer.WriteString(`</span>
		</div>
		<div class="p-2 text-center">
			<label>Target Carbohydrate</label>
			<span>`)
	hero.FormatInt(int64(user.TargetCarbohydrate), _buffer)
	_buffer.WriteString(`</span>
		</div>
		<div class="p-2 text-center">
			<label>Target Fat</label>
			<span>`)
	hero.FormatInt(int64(user.TargetFat), _buffer)
	_buffer.WriteString(`</span>
		</div>
	</div>

	<div class="d-flex flex-row justify-content-center">
		<div class="p-2 card">
			<div class="p-2 mx-auto">
				<a href="/food/add/">Add food to pantry</a>
			</div>
			<div class="p-2 mx-auto">
				<h2>Pantry</h2>
			</div>
			`)
	if len(userFoods) == 0 {
		_buffer.WriteString(`
				<div class="p-2 mx-auto">	
					<h4>No items!</h4>
				</div>
			`)
	}
	for _, food := range userFoods {
		_buffer.WriteString(`
				<div class="p-2 mx-auto">
					`)
		_buffer.WriteString(food)
		_buffer.WriteString(`&nbsp;<i class="fa fa-plus-square success-text"></i>
				</div>
			`)
	}
	_buffer.WriteString(`
		</div>

		<div class="p-2 card">
			<div class="p-2 mx-auto">
				<h2>Meal</h2>
			</div>
			<div class="p-2 mx-auto">
				Placeholder&nbsp;<i class="fa fa-minus-square validation-text"></i>
			</div>

		</div>
	</div>
</div>
`)

	_buffer.WriteString(`

</body>
</html>`)
	w.Write(_buffer.Bytes())

}
